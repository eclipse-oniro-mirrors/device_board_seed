/*
 * Allwinner Technology CO., Ltd. sun50iw9p1 soc board.
 *
 * soc board support.
 */

/dts-v1/;
#include <dt-bindings/input/input.h>
#include "sun50iw9p1.dtsi"
// #include "rp-hdmi-1080p60.dtsi"
// #include "rp-lcd-lvds-10.1-1024-600.dtsi"
#include "rp-lcd-rgb-7-1024-600.dtsi"
// #include "rp-lcd-lvds-21-1920-1080.dtsi"
// #include "rp-lcd-lvds-10.1-1024-600-hdmi.dtsi"
// #include "rp-lcd-rgb-4.3-800-480.dtsi"

/{
	model = "sun50iw9";
	compatible = "allwinner,t507", "arm,sun50iw9p1";

	reg_usb0_vbus: usb0-vbus {
		compatible = "regulator-fixed";
//		gpio = <&pio PE 2 1 2 0 1>;
		regulator-name = "usb-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
	};

	reg_usb1_vbus: usb1-vbus {
		compatible = "regulator-fixed";
//		gpio = <&pio PE 3 1 2 0 1>;
		regulator-name = "usb-vbus";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		enable-active-high;
	};

       pw_en {
               compatible = "pw-en-gpio";
               gpio0 = <&pio PE 11 1 0xffffffff 0xffffffff 1>;// 5v 3.3V
               gpio1 = <&pio PE 3 1 0xffffffff 0xffffffff 1>; //USB 5V
 //              gpio2 = <&pio PE 16 1 0xffffffff 0xffffffff 1>;// hub reset
               gpio3 = <&pio PE 10 1 0xffffffff 0xffffffff 1>;// fan
//               gpio4 = <&pio PH 4 1 0xffffffff 0xffffffff 1>;//
//               gpio5 = <&pio PE 2 1 0xffffffff 0xffffffff 1>;//
//               gpio6 = <&pio PE 16 1 0xffffffff 0xffffffff 1>;//
//               gpio7 = <&pio PE 2 1 0xffffffff 0xffffffff 1>;//
               gpio8 = <&pio PE 9 1 0xffffffff 0xffffffff 0>;// otg mode
               gpio9 = <&pio PE 2 1 0xffffffff 0xffffffff 0>;// otg pwr
	       pinctrl-0 = <&pwr_pins>;
               status = "okay";
       };


        rp_gpio{
                status = "okay";
                compatible = "rp_gpio";

//                ctp_wakeup = <&pio PH 7 1 0xffffffff 0xffffffff 1>;
/*
								otg_mode {
						                        gpio_num = <&gpio4 RK_PC5 GPIO_ACTIVE_HIGH>;
						                        gpio_function = <0>;            //0:output 1:input
						                        //gpio_event = <KEY_F14>;
						                        //send_mode = <0>;
								};


                led {
                        gpio_num = <&gpio1 RK_PA2 GPIO_ACTIVE_HIGH>;
                        gpio_function = <0>;            //0:output 1:input
                        //gpio_event = <KEY_F14>;
                        //send_mode = <0>;
                };
*/

                led {
                        gpio_num = <&pio PE 17 1 0xffffffff 0xffffffff 1>;
                        gpio_function = <3>;            //0:output 1:input 2:IRQ 3:flash
                        //gpio_event = <KEY_F14>;
                        //send_mode = <0>;
                };

                gpiope12 {
                        gpio_num = <&pio PE 12 1 0xffffffff 0xffffffff 1>;
                        gpio_function = <0>;            //0:output 1:input
//                        gpio_event = <KEY_F8>;
//                        send_mode = <0>;
                };

                gpiope18 {
                        gpio_num = <&pio PE 18 1 0xffffffff 0xffffffff 1>;
                        gpio_function = <0>;            //0:output 1:input
//                        gpio_event = <KEY_F9>;
//                        send_mode = <0>;
                };
                gpiope19 {
                        gpio_num = <&pio PE 19 1 0xffffffff 0xffffffff 1>;
                        gpio_function = <0>;            //0:output 1:input
//                        gpio_event = <KEY_F10>;
//                        send_mode = <0>;
                };

 //               gpiope22 {
 //                       gpio_num = <&pio PE 22 1 0xffffffff 0xffffffff 1>;
 //                       gpio_function = <0>;            //0:output 1:input
//                        gpio_event = <KEY_F11>;
//                        send_mode = <0>;
//                };

	};


	soc@03000000 {

		r_pio: pinctrl@07022000 {

			s_twi0_pins_a: s_twi0@0 {
				allwinner,pins = "PL0", "PL1";
				allwinner,pname = "s_twi0_scl", "s_twi0_sda";
				allwinner,function = "s_twi0";
				allwinner,muxsel = <3>;
				allwinner,drive = <0>;
				allwinner,pull = <1>;
			};

			s_twi0_pins_b: s_twi0@1 {
				allwinner,pins = "PL0", "PL1";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};
		};

		pio: pinctrl@0300b000 {

			/* takes the debounce time in usec as argument */
			input-debounce = <0 0 0 0 0 0 1>;

			spi0_pins_a: spi0@0 {
				allwinner,pins = "PC0", "PC2", "PC4";
				allwinner,pname = "spi0_sclk", "spi0_mosi", "spi0_miso";
				allwinner,function = "spi0";
			};

			spi0_pins_b: spi0@1 {
				allwinner,pins = "PC3", "PC7";
				allwinner,pname = "spi0_cs0", "spi0_cs1";
				allwinner,function = "spi0";
			};

			spi0_pins_c: spi0@2 {
				allwinner,pins = "PC0", "PC2", "PC3", "PC4", "PC7";
				allwinner,function = "io_disabled";
			};

			spi1_pins_a: spi1@0 {
				allwinner,pins = "PH6", "PH7", "PH8";
				allwinner,pname = "spi1_sclk", "spi1_mosi", "spi1_miso";
				allwinner,function = "spi1";
			};

			spi1_pins_b: spi1@1 {
				allwinner,pins = "PH5", "PH9";
				allwinner,pname = "spi1_cs0", "spi1_cs1";
				allwinner,function = "spi1";
			};

			spi1_pins_c: spi1@2 {
				allwinner,pins = "PH5", "PH6", "PH7", "PH8", "PH9";
				allwinner,function = "io_disabled";
			};

			twi0_pins_a: twi0@0 {
				allwinner,pins = "PA0", "PA1";
				allwinner,pname = "twi0_scl", "twi0_sda";
				allwinner,function = "twi0";
				allwinner,muxsel = <4>;
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			twi0_pins_b: twi0@1 {
				allwinner,pins = "PA0", "PA1";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			twi1_pins_a: twi1@0 {
				allwinner,pins = "PI7", "PI8";
				allwinner,pname = "twi1_scl", "twi1_sda";
				allwinner,function = "twi1";
				allwinner,muxsel = <5>;
				allwinner,drive = <1>;
				allwinner,pull = <1>;
			};

			twi1_pins_b: twi1@1 {
				allwinner,pins = "PI7", "PI8";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			twi2_pins_a: twi2@0 {
				allwinner,pins = "PE20", "PE21";
				allwinner,pname = "twi2_scl", "twi2_sda";
				allwinner,function = "twi2";
				allwinner,muxsel = <5>;
				allwinner,drive = <1>;
				allwinner,pull = <1>;
			};

			twi2_pins_b: twi2@1 {
				allwinner,pins = "PE20", "PE21";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			twi3_pins_a: twi3@0 {
				allwinner,pins = "PA10", "PA11";
				allwinner,pname = "twi3_scl", "twi3_sda";
				allwinner,function = "twi3";
				allwinner,muxsel = <2>;
				allwinner,drive = <0>;
				allwinner,pull = <1>;
			};

			twi3_pins_b: twi3@1 {
				allwinner,pins = "PA10", "PA11";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			twi4_pins_a: twi4@0 {
				allwinner,pins = "PG15", "PG16";
				allwinner,pname = "twi4_scl", "twi4_sda";
				allwinner,function = "twi4";
				allwinner,muxsel = <5>;
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			twi4_pins_b: twi4@1 {
				allwinner,pins = "PG15", "PG16";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <0>;
				allwinner,pull = <0>;
			};

			scr0_pins_a: scr0@0 {
				allwinner,pins = "PD17", "PD18", "PD14", "PD15", "PD16";
				allwinner,pname = "scr0_rst", "scr0_det", "scr0_vccen", "scr0_sck", "scr0_sda";
			};

			sdc0_pins_a: sdc0@0 {
				allwinner,pins = "PF0", "PF1", "PF2",
						 "PF3", "PF4", "PF5";
				allwinner,function = "sdc0";
				allwinner,muxsel = <2>;
				allwinner,drive = <3>;
				allwinner,pull = <1>;
			};

			sdc0_pins_c: sdc0@2 {
				allwinner,pins = "PF0", "PF1",
						 "PF3", "PF5";
				allwinner,function = "uart0_jtag";
				allwinner,muxsel = <3>;
				allwinner,drive = <1>;
				allwinner,pull = <1>;
			};

			sdc1_pins_a: sdc1@0 {
				allwinner,pins = "PG0", "PG1", "PG2",
						 "PG3", "PG4", "PG5";
				allwinner,function = "sdc1";
				allwinner,muxsel = <2>;
				allwinner,drive = <3>;
				allwinner,pull = <1>;
			};

			sdc2_pins_a: sdc2@0 {
				allwinner,pins = "PC1", "PC5", "PC6",
						 "PC8", "PC9", "PC10", "PC11",
						 "PC13", "PC14", "PC15", "PC16";
				allwinner,function = "sdc2";
				allwinner,muxsel = <3>;
				allwinner,drive = <2>;
				allwinner,pull = <1>;
			};

			sdc2_pins_b: sdc2@1 {
				allwinner,pins = "PC0", "PC1", "PC5", "PC6",
						 "PC8", "PC9", "PC10", "PC11",
						 "PC13", "PC14", "PC15", "PC16";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <1>;
				allwinner,pull = <1>;
			};

			sdc2_pins_c: sdc2@2 {
				allwinner,pins = "PC0";
				allwinner,function = "sdc2";
				allwinner,muxsel = <3>;
				allwinner,drive = <2>;
				allwinner,pull = <2>;
			};

			pwm0_pin_a: pwm0@0 {
				allwinner,pins = "PD28";
				allwinner,function = "pwm0";
				allwinner,muxsel = <0x02>;
				allwinner,drive = <0xffffffff>;
				allwinner,pull = <1>;
				allwinner,data = <0xffffffff>;
			};

			pwm0_pin_b: pwm0@1 {
				allwinner,pins = "PD28";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <0x07>;
				allwinner,drive = <0xffffffff>;
				allwinner,pull = <0>;
				allwinner,data = <0xffffffff>;
			};

			spdif_pins_a: spdif@0 {
				allwinner,pins = "PH2", "PH3", "PH4";
				allwinner,function = "spdif";
				allwinner,muxsel = <3>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			spdif_pins_b: spdif_sleep@0 {
				allwinner,pins = "PH2", "PH3", "PH4";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			dmic_pins_a: dmic@0 {
				allwinner,pins = "PI0", "PI1", "PI2", "PI3", "PI4";
				allwinner,function = "dmic";
				allwinner,muxsel = <3>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			dmic_pins_b: dmic_sleep@0 {
				allwinner,pins = "PI0", "PI1", "PI2", "PI3", "PI4";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			/* this set of daudio0 pins is used for t507 board */
			ahub_daudio0_pins_a: ahub_daudio0@0 {
				allwinner,pins = "PA6", "PA7", "PA8", "PA9";
				allwinner,function = "h_i2s0";
				allwinner,muxsel = <3>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			ahub_daudio0_pins_b: ahub_daudio0_sleep@0 {
				allwinner,pins = "PA6", "PA7", "PA8", "PA9";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			ahub_daudio2_pins_a: ahub_daudio2@0 {
				allwinner,pins = "PG11", "PG12", "PG13", "PG14";
				allwinner,function = "h_i2s2";
				allwinner,muxsel = <2>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			ahub_daudio2_pins_b: ahub_daudio2_sleep@0 {
				allwinner,pins = "PG11", "PG12", "PG13", "PG14";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			ahub_daudio3_pins_a: ahub_daudio3@0 {
				allwinner,pins = "PH5", "PH6", "PH7", "PH8", "PH9";
				allwinner,function = "h_i2s3";
				allwinner,muxsel = <3>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};

			ahub_daudio3_pins_b: ahub_daudio3_sleep@0 {
				allwinner,pins = "PH5", "PH6", "PH7", "PH8", "PH9";
				allwinner,function = "io_disabled";
				allwinner,muxsel = <7>;
				allwinner,drive = <1>;
				allwinner,pull = <0>;
			};
		};

		spi0: spi@05010000 {
			pinctrl-0 = <&spi0_pins_a &spi0_pins_b>;
			pinctrl-1 = <&spi0_pins_c>;
			spi_slave_mode = <0>;
			status = "disabled";
			spi_board0 {
				device_type = "spi_board0";
				compatible = "spidev";
				spi-max-frequency = <0x5f5e100>;
				reg = <0x0>;
			};
		};

		spi1: spi@05011000 {
			pinctrl-0 = <&spi1_pins_a &spi1_pins_b>;
			pinctrl-1 = <&spi1_pins_c>;
			spi_slave_mode = <0>;
			status = "disabled";
			spi_board1 {
				device_type = "spi_board1";
				compatible = "rohm,dh2228fv";
				spi-max-frequency = <0x5f5e100>;
				reg = <0x0>;
				spi-rx-bus-width = <0x1>;
				spi-tx-bus-width = <0x1>;
			};
		};

		sdc2: sdmmc@04022000 {
			pinctrl-0 = <&sdc2_pins_a &sdc2_pins_c>;
			non-removable;
			bus-width = <8>;
			mmc-ddr-1_8v;
			mmc-hs200-1_8v;
			mmc-hs400-1_8v;
			no-sdio;
			no-sd;
			cap-mmc-highspeed;
			sunxi-power-save-mode;
			sunxi-dis-signal-vol-sw;
			max-frequency = <100000000>;
			ctl-spec-caps = <0x308>;
			vmmc-supply = <&reg_aldo1>;
			vqmmc-supply = <&reg_dcdc1>;
			status = "disabled";
		};

		sdc0: sdmmc@04020000 {
			pinctrl-0 = <&sdc0_pins_a>;
			bus-width = <4>;
			cd-gpios = <&pio PF 6 6 1 3 0xffffffff>;
			cd-used-24M;
			/*non-removable;*/
			/*broken-cd;*/
			/*cd-inverted*/
			/*data3-detect;*/
			cap-sd-highspeed;
			sd-uhs-sdr50;
			sd-uhs-ddr50;
			sd-uhs-sdr104;
			no-sdio;
			no-mmc;
			sunxi-power-save-mode;
			sunxi-signal-vol-sw-without-pmu;
			/*sunxi-dis-signal-vol-sw;*/
			max-frequency = <150000000>;
			ctl-spec-caps = <0x8>;
			vmmc-supply = <&reg_dcdc1>;
			vqmmc33sw-supply = <&reg_dcdc1>;
			vdmmc33sw-supply = <&reg_dcdc1>;
			vqmmc18sw-supply = <&reg_aldo2>;
			vdmmc18sw-supply = <&reg_aldo2>;
			status = "okay";
		};

		sdc1: sdmmc@04021000 {
			pinctrl-0 = <&sdc1_pins_a>;
			bus-width = <4>;
			no-mmc;
			no-sd;
			cap-sd-highspeed;
			/*sd-uhs-sdr12*/
			/*sd-uhs-sdr25*/
			/*sd-uhs-sdr50;*/
			/*sd-uhs-ddr50;*/
			/*sd-uhs-sdr104*/
			/*sunxi-power-save-mode;*/
			sunxi-dis-signal-vol-sw;
			cap-sdio-irq;
			keep-power-in-suspend;
			ignore-pm-notify;
			max-frequency = <50000000>;
			ctl-spec-caps = <0x8>;
			status = "okay";
		};

		gmac0: eth@05020000{
			phy-mode = "rgmii";
			phy-rst = <&pio PI 6 1 1 1 0>;
			use_ephy25m = <1>;
			tx-delay = <7>;
			rx-delay = <0>;
			gmac-power0-supply = <&reg_cldo3>;
			gmac-power1-supply;
			gmac-power2-supply;
			gmac-power0-vol = <3300000>;
			gmac-power1-vol;
			gmac-power2-vol;
			status = "okay";
		};

		gmac1: eth@05030000{
			phy-mode = "rmii";
			phy-rst = <&pio PA 12 1 1 1 0>;
			use_ephy25m = <0>;
			tx-delay = <7>;
			rx-delay = <0>;
			gmac-power0-supply = <&reg_cldo3>;
			gmac-power1-supply;
			gmac-power2-supply;
			gmac-power0-vol = <3300000>;
			gmac-power1-vol;
			gmac-power2-vol;
			status = "okay";
		};

		twi0: twi@0x05002000{
			clock-frequency = <400000>;
			pinctrl-0 = <&twi0_pins_a>;
			pinctrl-1 = <&twi0_pins_b>;
			twi-supply = <&reg_dcdc1>;
			status = "disabled";
		};

		twi1: twi@0x05002400{
			clock-frequency = <200000>;
			pinctrl-0 = <&twi1_pins_a>;
			pinctrl-1 = <&twi1_pins_b>;
			twi-supply = <&reg_cldo3>;
			status = "disabled";

			it6807 {
				compatible = "allwinner,it6807_0";
				device_type = "it6807_0";
				reg = <0x48>;
				status = "disabled";
				it6807_twi_id = <0x1>;
				it6807_twi_addr = <0x48>;
				it6807_reset = <&pio PI 0 1 0xffffffff 0xffffffff 0>;
				it6807_backlight = <&pio PI 11 1 0xffffffff 0xffffffff 0>;
				it6807_hdmi_vcc_3v3-supply = <&reg_sw>;
				it6807_vcc_3v3-supply = <&reg_bldo3>;
			};
		};

		twi2: twi@0x05002800{
			clock-frequency = <200000>;
			pinctrl-0 = <&twi2_pins_a>;
			pinctrl-1 = <&twi2_pins_b>;
			twi-supply = <&reg_dcdc1>;
			status = "okay";
/*
			pcf8563: rtc@51 {
				compatible = "nxp,pcf8563";
				reg = <0x51>;
			};
*/
			rtc@51 {
                compatible = "allwinner,rtc-hym8563";
//                compatible = "haoyu,hym8563";
                reg = <0x51>;
            };
		};

		twi3: twi@0x05002c00{
			clock-frequency = <200000>;
			pinctrl-0 = <&twi3_pins_a>;
			pinctrl-1 = <&twi3_pins_b>;
			twi-supply = <&reg_dcdc1>;
			status = "okay";
			/* audio: add ac107 capture */
			ac107@36 {
				compatible = "allwinner,ac107_0";
				device_type = "ac107_0";
				reg = <0x36>;
				ac107_avcc_vccio_3v3-supply = <&reg_dcdc1>;
				ac107_dvcc_1v8-supply = <&reg_aldo2>;
			};
			ctp {
				compatible = "allwinner,goodix";
				reg = <0x5d>;
				device_type = "ctp";
				status = "disabled";
				ctp_twi_id = <0x0>;
				ctp_twi_addr = <0x5d>;
				ctp_screen_max_x = <0x500>;
				ctp_screen_max_y = <0x320>;
				ctp_revert_x_flag = <0x0>;
				ctp_revert_y_flag = <0x0>;
				ctp_exchange_x_y_flag = <0x0>;
				ctp_int_port = <&pio PE 16 6 0xffffffff 0xffffffff 0>;
				ctp_wakeup = <&pio PE 22 1 0xffffffff 0xffffffff 1>;
				ctp-supply = <&reg_dcdc1>;
				ctp_power_ldo_vol = <3300>;
			};

		};

		twi4: twi@0x05003000{
			clock-frequency = <200000>;
			pinctrl-0 = <&twi4_pins_a>;
			pinctrl-1 = <&twi4_pins_b>;
			twi-supply = <&reg_cldo2>;
			status = "disabled";

			ncs8801s_two_1 {
				compatible = "allwinner,ncs8801s_two";
				reg = <0x70>;
				device_type = "ncs8801s_0";
				status = "disabled";
				ncs8801s_two_twi_id = <0x5>;
				ncs8801s_two_twi_addr = <0x70>;
				ncs8801s_two_reset = <&pio PE 17 1 0xffffffff 0xffffffff 0>;
				ncs8801s-supply = <&reg_aldo5>;
				nsc8801s_power_vol = <1200>;
			};

			ncs8801s_two_2 {
				compatible = "allwinner,ncs8801s_two";
				reg = <0x75>;
				device_type = "ncs8801s_1";
				status = "disabled";
				ncs8801s_two_2_twi_id = <0x5>;
				ncs8801s_two_2_twi_addr = <0x75>;
			};

		};

		twi5: twi@0x07081400{
			clock-frequency = <200000>;
			pinctrl-0 = <&s_twi0_pins_a>;
			pinctrl-1 = <&s_twi0_pins_b>;
			status = "okay";
		};

		pwm0: pwm0@0300a000 {
			pinctrl-names = "active", "sleep";
			pinctrl-0 = <&pwm0_pin_a>;
			pinctrl-1 = <&pwm0_pin_b>;
		};

		sdc1: sdmmc@04021000 {
			status = "okay";
		};

		uart1: uart@05000400 {
			status = "okay";
		};

		card0_boot_para {  /* Avoid dtc compiling warnings. @TODO: Developer should modify this to the actual value */
			device_type = "card0_boot_para";
			card_ctrl = <0x0>;
			card_high_speed = <0x1>;
			card_line = <0x4>;
			pinctrl-0 = <&sdc0_pins_a>;
		};

		card2_boot_para {  /* Avoid dtc compiling warnings. @TODO: Developer should modify this to the actual value */
			device_type = "card2_boot_para";
			card_ctrl = <0x2>;
			card_high_speed = <0x1>;
			card_line = <0x8>;
			pinctrl-0 = <&sdc2_pins_a &sdc2_pins_c>;
			sdc_ex_dly_used = <0x2>;
			sdc_io_1v8 = <0x0>;
			sdc_tm4_win_th = <0x04>;
			sdc_tm4_hs400_max_freq = <0xc8>;
			sdc_type = "tm4";
		};

		gpio_bias {  /* Avoid dtc compiling warnings. @TODO: Developer should modify this to the actual value */
			reg = <0x0 0x4 0x0 0x0>;  /* Avoid dtc compiling warnings. @TODO: Developer should modify this to the actual value */
			device_type = "gpio_bias";
			pc_bias = <1800>;
		};

		uart2: uart@05000800 {
			uart2_type = <2>;
			status = "disabled";
		};

		uart3: uart@05000c00 {
			uart3_type = <2>;
			status = "disabled";
		};

		uart4: uart@05001000 {
			uart-supply = <&reg_cldo3>;
			uart4_type = <2>;
			status = "disabled";
		};

		uart5: uart@05001400 {
			uart5_type = <2>;
			status = "okay";
		};

		tda7729 {
			device_type = "tda7729";
			status = "okay";
			tda7729_twi_id = <0x1>;
			twi_addr = <0x44>;
//			tda7729_power = <&pio PH 9 1 0xffffffff 0xffffffff 0>;
		};

		ncs8801s {
			device_type = "ncs8801s_0";
			status = "okay";
			ncs8801s_reset = <&pio PE 17 1 0xffffffff 0xffffffff 0>;
		};

		wlan:wlan {
			compatible    = "allwinner,sunxi-wlan";
			clocks        = <&clk_losc_out>;
			pinctrl-0     = <&clk_losc_pins_a>;
			pinctrl-names = "default";
			wlan_busnum   = <0x1>;
			wlan_power    = "axp858-dcdc1";
			wlan_io_regulator = "axp858-cldo2";
			wlan_regon    = <&pio PE 5 1 0xffffffff 0xffffffff 0>;
			wlan_hostwake = <&pio PE 4 6 0xffffffff 0xffffffff 0>;
			chip_en;
			power_en;
			status        = "okay";
		};

		bt:bt {
			compatible    = "allwinner,sunxi-bt";
			clocks        = <&clk_losc_out>;
			bt_power      = "axp858-dcdc1";
			bt_io_regulator = "axp858-cldo2";
			bt_rst_n      = <&pio PE 8 1 0xffffffff 0xffffffff 0>;
			status        = "okay";
		};

		btlpm:btlpm {
			compatible  = "allwinner,sunxi-btlpm";
			uart_index  = <0x1>;
			bt_wake     = <&pio PE 7 1 0xffffffff 0xffffffff 1>;
			bt_hostwake = <&pio PE 6 6 0xffffffff 0xffffffff 0>;
			status      = "okay";
		};
		car_reverse:car_reverse {
			compatible  = "allwinner,sunxi-car-reverse";
			tvd_id  = <0x5>;
			screen_width = <1280>;
			screen_height = <800>;
			rotation = <0x0>;
			source = <0x1>;
			oview = <0x0>;
			reverse_pin = <&pio PI 15 6 0 1 0>;
			status      = "disabled";
		};
		addr_mgt:addr_mgt {
			compatible     = "allwinner,sunxi-addr_mgt";
			type_addr_wifi = <0x0>;
			type_addr_bt   = <0x0>;
			type_addr_eth  = <0x0>;
			status         = "okay";
		};

		usbc0:usbc0@0 {
			device_type		= "usbc0";
			usb_port_type		= <0x2>;
			usb_detect_type		= <0x1>;
			usb_detect_mode		= <0x0>;
			usb_id_gpio		= <&pio PE 0 0 1 0 0>;
			usb_det_vbus_gpio	= <&pio PE 1 0 1 0 0>;
			usb_regulator_io	= "nocare";
			usb_wakeup_suspend	= <0x0>;
			usb_luns		= <0x3>;
			usb_serial_unique	= <0x0>;
			usb_serial_number	= "20080411";
			status			= "okay";
		};

		ehci0:ehci0-controller@0x05101000 {
			drvvbus-supply = <&reg_usb0_vbus>;
		};

		ohci0:ohci0-controller@0x05101400 {
			drvvbus-supply = <&reg_usb0_vbus>;
		};

		usbc1:usbc1@0 {
			device_type		= "usbc1";
			usb_regulator_io	= "nocare";
			usb_wakeup_suspend	= <0x0>;
			status			= "okay";
		};

		ehci1:ehci1-controller@0x05200000 {
			drvvbus-supply = <&reg_usb1_vbus>;
		};

		ohci1:ohci1-controller@0x05200400 {
			drvvbus-supply = <&reg_usb1_vbus>;
		};

		usbc2:usbc2@0 {
			device_type		= "usbc2";
			usb_drv_vbus_gpio;
			usb_regulator_io	= "nocare";
			usb_wakeup_suspend	= <0x0>;
			status			= "okay";
		};

		usbc3:usbc3@0 {
			device_type		= "usbc3";
			usb_drv_vbus_gpio;
			usb_regulator_io	= "nocare";
			usb_wakeup_suspend	= <0x0>;
			status			= "okay";
		};

		/* audio dirver module -> audiocodec*/
		codec:codec@0x05096000 {
			adcdrc_cfg  = <0x00>;
			adchpf_cfg  = <0x00>;
			dacdrc_cfg  = <0x00>;
			dachpf_cfg  = <0x00>;
			fmin_gain   = <0x03>;
			linein_gain = <0x03>;
			digital_vol = <0x00>;
			lineout_vol = <0x1a>;
			/* gpio-spk */
			gpio-spk = <&pio PH 7 1 1 1 1>;
			pa_ctl_level   = <0x00>;
			pa_msleep_time = <0x78>;
			ramp_func_used = <0x01>;
			avcc-supply = <&reg_aldo2>;
			status = "okay";
		};

		cpudai:cpudai-controller@0x05096000 {
			status = "okay";
		};

		sndcodec:sound@0{
			status = "okay";
		};

		/* audio dirver module -> spdif*/
		spdif:spdif-controller@0x05093000{
			pinctrl-names = "default","sleep";
			pinctrl-0 = <&spdif_pins_a>;
			pinctrl-1 = <&spdif_pins_b>;
			status = "okay";
		};

		sndspdif:sound@1{
			status = "okay";
		};

		/* audio dirver module -> dmic*/
		dmic:dmic-controller@0x05095000{
			pinctrl-names = "default","sleep";
			pinctrl-0 = <&dmic_pins_a>;
			pinctrl-1 = <&dmic_pins_b>;
			status = "okay";
		};

		snddmic:sound@2{
			status = "okay";
		};

		/* audio dirver module -> ahub*/
		ahub_codec:ahub_codec@0x05097000{
			status = "okay";
		};

		ahub_daudio0:ahub_daudio0@0x05097000{
			pinconfig 		= <0x01>;
			frametype 		= <0x00>;
			pcm_lrck_period		= <0x20>;
			slot_width_select	= <0x20>;
			tdm_config		= <0x01>;
			mclk_div 		= <0x08>;
			pinctrl-names = "default","sleep";
			pinctrl-0 = <&ahub_daudio0_pins_a>;
			pinctrl-1 = <&ahub_daudio0_pins_b>;
			status = "okay";
		};

		ahub_daudio1:ahub_daudio1@0x05097000{
			pinconfig 		= <0x00>;
			frametype 		= <0x00>;
			pcm_lrck_period 	= <0x20>;
			slot_width_select 	= <0x20>;
			tdm_config 		= <0x01>;
			mclk_div 		= <0x01>;
			status = "okay";
		};

		ahub_daudio2:ahub_daudio2@0x05097000{
			pinconfig 		= <0x01>;
			frametype 		= <0x00>;
			pcm_lrck_period 	= <0x20>;
			slot_width_select 	= <0x20>;
			tdm_config 		= <0x01>;
			mclk_div 		= <0x04>;
			pinctrl-names = "default","sleep";
			pinctrl-0 = <&ahub_daudio2_pins_a>;
			pinctrl-1 = <&ahub_daudio2_pins_b>;
			status = "okay";
		};

		ahub_daudio3:ahub_daudio3@0x05097000{
			pinconfig 		= <0x01>;
			frametype 		= <0x00>;
			pcm_lrck_period 	= <0x20>;
			slot_width_select 	= <0x20>;
			tdm_config 		= <0x01>;
			mclk_div 		= <0x04>;
			pinctrl-names = "default","sleep";
			pinctrl-0 = <&ahub_daudio3_pins_a>;
			pinctrl-1 = <&ahub_daudio3_pins_b>;
			status = "disabled";
		};

		ahub_cpudai0:cpudai0-controller@0x05097000 {
			status = "okay";
		};

		ahub_cpudai1:cpudai1-controller@0x05097000 {
			status = "okay";
		};

		ahub_cpudai2:cpudai2-controller@0x05097000 {
			status = "okay";
		};

		ahub_cpudai3:cpudai3-controller@0x05097000 {
			status = "okay";
		};

		snddaudio0:sound@3{
			/* ac107-codec throught daudio0*/
			sunxi,snddaudio-codec = "ac107.3-0036";
			sunxi,snddaudio-codec-dai = "ac107-pcm0";
			daudio_master		= <0x04>;
			audio_format  		= <0x01>;
			signal_inversion 	= <0x01>;
			status = "okay";
		};

		sndhdmi:sound@4{
			daudio_master 		= <0x04>;
			audio_format 		= <0x01>;
			signal_inversion 	= <0x01>;
			status = "okay";
		};

		snddaudio2:sound@5{
			sunxi,snddaudio-codec = "snd-soc-dummy";
			sunxi,snddaudio-codec-dai = "snd-soc-dummy-dai";
			daudio_master 		= <0x04>;
			audio_format 		= <0x01>;
			signal_inversion 	= <0x01>;
			status = "okay";
		};

		snddaudio3:sound@6{
			/* sunxi,snddaudio-codec = "snd-soc-dummy"; */
			/* sunxi,snddaudio-codec-dai = "snd-soc-dummy-dai"; */
			daudio_master 		= <0x04>;
			audio_format 		= <0x01>;
			signal_inversion 	= <0x01>;
			status = "disabled";
		};

		sndahub:sound@7{
			status = "okay";
		};
/*--------------------------------------------------------------------------------
vin (video input modules) configuration
vind(x)_used: 0:disable 1:enable, main node for vin
csi(x)_used: 0:disable 1:enable
flash(x)_used: 0:disable 1:enable
flash(x)_type: 0:FLASH_RELATING, 1:FLASH_EN_INDEPEND, 2:FLASH_POWER
flash(x)_en: flash enable gpio, type = 0 of 1
flash(x)_mode: flash mode gpio, type = 0 of 1
flash(x)_flvdd: flash module io power handle string, pmu power supply, type = 2
flash(x)_flvdd_vol: flash module io power voltage, pmu power supply, type = 2
actuator(x)_used: 0:disable 1:enable
actuator(x)_name: vcm name
actuator(x)_slave: vcm iic slave address
actuator(x)_af_pwdn: vcm power down gpio
actuator(x)_afvdd: vcm power handle string, pmu power supply
actuator(x)_afvdd_vol: vcm power voltage, pmu power supply
sensor(x)_used: 0:disable 1:enable
sensor(x)_isp_used 0:not use isp 1:use isp
sensor(x)_fmt: 0:yuv 1:bayer raw rgb
sensor(x)_stby_mode: 0:not shut down power at standby 1:shut down power at standby
sensor(x)_vflip: flip in vertical direction 0:disable 1:enable
sensor(x)_hflip: flip in horizontal direction 0:disable 1:enable
sensor(x)_cameravdd-supply: camera module power handle string, pmu power supply
sensor(x)_cameravdd_vol: camera module power voltage, pmu power supply
sensor(x)_iovdd-supply: camera module io power handle string, pmu power supply
sensor(x)_iovdd_vol: camera module io power voltage, pmu power supply
sensor(x)_avdd-supply: camera module analog power handle string, pmu power supply
sensor(x)_avdd_vol: camera module analog power voltage, pmu power supply
sensor(x)_dvdd-supply: camera module core power handle string, pmu power supply
sensor(x)_dvdd_vol: camera module core power voltage, pmu power supply
sensor(x)_power_en: camera module power enable gpio
sensor(x)_reset: camera module reset gpio
sensor(x)_pwdn: camera module pwdn gpio
fill voltage in uV, e.g. iovdd = 2.8V, sensorx_iovdd_vol = 2800000
fill handle string as below:
<&reg_bldo3>
<&reg_bldo4>
<&reg_bldo5>
fill handle string "" when not using any pmu power supply
vinc(x)_used: 0:disable 1:enable
vinc(x)_sensor_list: use sensor list
--------------------------------------------------------------------------------*/
		vind0:vind@0 {
			vind0_clk = <324000000>;
			status = "okay";

			csi_cci0:cci@0 {
				status = "okay";
			};
			csi_cci1:cci@1 {
				status = "disabled";
			};
			csi0:csi@0 {
				status = "okay";
			};
			csi1:csi@1 {
				status = "disabled";
			};
			actuator0:actuator@0 {
				device_type = "actuator0";
				actuator0_name = "ad5820_act";
				actuator0_slave = <0x18>;
				actuator0_af_pwdn = <>;
				actuator0_afvdd = "afvcc-csi";
				actuator0_afvdd_vol = <2800000>;
				status = "disabled";
			};
			flash0:flash@0 {
				device_type = "flash0";
				flash0_type = <2>;
				flash0_en = <>;
				flash0_mode = <>;
				flash0_flvdd = "";
				flash0_flvdd_vol = <>;
				device_id = <0>;
				status = "disabled";
			};
			sensor0:sensor@0 {
				device_type = "sensor0";
				sensor0_mname = "tp2854_mipi";
				sensor0_twi_cci_id = <0>;
				sensor0_twi_addr = <0x88>;
				sensor0_mclk_id = <0>;
				sensor0_pos = "rear";
				sensor0_isp_used = <0>;
				sensor0_fmt = <0>;
				sensor0_stby_mode = <0>;
				sensor0_vflip = <0>;
				sensor0_hflip = <0>;
				sensor0_iovdd-supply = <&reg_cldo2>;
				sensor0_iovdd_vol = <3300000>;
				sensor0_avdd-supply = <&reg_cldo1>;
				sensor0_avdd_vol = <3300000>;
				sensor0_dvdd-supply = <&reg_bldo5>;
				sensor0_dvdd_vol = <1200000>;
				sensor0_power_en = <>;
//				sensor0_reset = <&pio PE 9 1 0 1 0>;
				sensor0_pwdn = <>;
				sensor0_sm_vs = <>;
				status	= "okay";
			};
			sensor1:sensor@1 {
				device_type = "sensor1";
				sensor1_mname = "nvp6158";
				sensor1_twi_cci_id = <1>;
				sensor1_twi_addr = <0x64>;
				sensor1_mclk_id = <1>;
				sensor1_pos = "front";
				sensor1_isp_used = <0>;
				sensor1_fmt = <0>;
				sensor1_stby_mode = <0>;
				sensor1_vflip = <0>;
				sensor1_hflip = <0>;
				sensor1_cameravdd-supply = <&reg_aldo5>;
				sensor1_cameravdd_vol = <3300000>;
				sensor1_iovdd-supply = <&reg_bldo3>;
				sensor1_iovdd_vol = <3300000>;
				sensor1_avdd-supply = <&reg_bldo4>;
				sensor1_avdd_vol = <1200000>;
				sensor1_dvdd-supply = <&reg_bldo5>;
				sensor1_dvdd_vol = <1200000>;
				sensor1_power_en = <>;
				sensor1_reset = <&pio PI 12 1 0 1 0>;
				sensor1_pwdn = <&pio PI 14 1 0 1 0>;
				sensor1_sm_vs = <>;
				status	= "disabled";
			};
			vinc0:vinc@0 {
				vinc0_csi_sel = <0>;
				vinc0_mipi_sel = <0>;
				vinc0_isp_sel = <0>;
				vinc0_isp_tx_ch = <0>;
				vinc0_rear_sensor_sel = <0>;
				vinc0_front_sensor_sel = <0>;
				vinc0_sensor_list = <0>;
				status = "okay";
			};
			vinc1:vinc@1 {
				vinc1_csi_sel = <0>;
				vinc1_mipi_sel = <0>;
				vinc1_isp_sel = <0>;
				vinc1_isp_tx_ch = <1>;
				vinc1_rear_sensor_sel = <0>;
				vinc1_front_sensor_sel = <0>;
				vinc1_sensor_list = <0>;
				status = "okay";
			};
			vinc2:vinc@2 {
				vinc2_csi_sel = <1>;
				vinc2_mipi_sel = <0xff>;
				vinc2_isp_sel = <1>;
				vinc2_isp_tx_ch = <0>;
				vinc2_rear_sensor_sel = <1>;
				vinc2_front_sensor_sel = <1>;
				vinc2_sensor_list = <0>;
				status = "okay";
			};
			vinc3:vinc@3 {
				vinc3_csi_sel = <1>;
				vinc3_mipi_sel = <0xff>;
				vinc3_isp_sel = <1>;
				vinc3_isp_tx_ch = <1>;
				vinc3_rear_sensor_sel = <1>;
				vinc3_front_sensor_sel = <1>;
				vinc3_sensor_list = <0>;
				status = "okay";
			};
			vinc4:vinc@4 {
				vinc4_csi_sel = <1>;
				vinc4_mipi_sel = <0xff>;
				vinc4_isp_sel = <1>;
				vinc4_isp_tx_ch = <2>;
				vinc4_rear_sensor_sel = <1>;
				vinc4_front_sensor_sel = <1>;
				vinc4_sensor_list = <0>;
				status = "disabled";
			};
			vinc5:vinc@5 {
				vinc5_csi_sel = <1>;
				vinc5_mipi_sel = <0xff>;
				vinc5_isp_sel = <1>;
				vinc5_isp_tx_ch = <3>;
				vinc5_rear_sensor_sel = <1>;
				vinc5_front_sensor_sel = <1>;
				vinc5_sensor_list = <0>;
				status = "disabled";
			};
		};

///*----------------------------------------------------------------------------------
//disp init configuration
//
//disp_mode             (0:screen0<screen0,fb0>)
//screenx_output_type   (0:none; 1:lcd; 2:tv; 3:hdmi;5:vdpo)
//screenx_output_mode   (used for hdmi output, 0:480i 1:576i 2:480p 3:576p 4:720p50)
//                      (5:720p60 6:1080i50 7:1080i60 8:1080p24 9:1080p50 10:1080p60)
//screenx_output_format (for hdmi, 0:RGB 1:yuv444 2:yuv422 3:yuv420)
//screenx_output_bits   (for hdmi, 0:8bit 1:10bit 2:12bit 2:16bit)
//screenx_output_eotf   (for hdmi, 0:reserve 4:SDR 16:HDR10 18:HLG)
//screenx_output_cs     (for hdmi, 0:undefined  257:BT709 260:BT601  263:BT2020)
//screenx_output_dvi_hdmi (for hdmi, 0:undefined 1:dvi mode 2:hdmi mode)
//screen0_output_range   (for hdmi, 0:default 1:full 2:limited)
//screen0_output_scan    (for hdmi, 0:no data 1:overscan 2:underscan)
//screen0_output_aspect_ratio  (for hdmi, 8-same as original picture 9-4:3 10-16:9 11-14:9)
//fbx format            (4:RGB655 5:RGB565 6:RGB556 7:ARGB1555 8:RGBA5551 9:RGB888 10:ARGB8888 12:ARGB4444)
//fbx pixel sequence    (0:ARGB 1:BGRA 2:ABGR 3:RGBA)
//fb0_scaler_mode_enable(scaler mode enable, used FE)
//fbx_width,fbx_height  (framebuffer horizontal/vertical pixels, fix to output resolution while equal 0)
//lcdx_backlight        (lcd init backlight,the range:[0,256],default:197
//lcdx_yy               (lcd init screen bright/contrast/saturation/hue, value:0~100, default:50/50/57/50)
//lcd0_contrast         (LCD contrast, 0~100)
//lcd0_saturation       (LCD saturation, 0~100)
//lcd0_hue              (LCD hue, 0~100)
//framebuffer software rotation setting:
//disp_rotation_used:   (0:disable; 1:enable,you must set fbX_width to lcd_y,
//set fbX_height to lcd_x)
//degreeX:              (X:screen index; 0:0 degree; 1:90 degree; 3:270 degree)
//degreeX_Y:            (X:screen index; Y:layer index 0~15; 0:0 degree; 1:90 degree; 3:270 degree)
//devX_output_type : config output type in bootGUI framework in UBOOT-2018.
//				   (0:none; 1:lcd; 2:tv; 4:hdmi;)
//devX_output_mode : config output resolution(see include/video/sunxi_display2.h) of bootGUI framework in UBOOT-2018
//devX_screen_id   : config display index of bootGUI framework in UBOOT-2018
//devX_do_hpd      : whether do hpd detectation or not in UBOOT-2018
//chn_cfg_mode     : Hardware DE channel allocation config. 0:single display with 6
//				   channel, 1:dual display with 4 channel in main display and 2 channel in second
//                   display, 2:dual display with 3 channel in main display and 3 channel in second
//                   in display.
//----------------------------------------------------------------------------------*/
//		disp: disp@01000000 {
//			disp_init_enable         = <1>;
//			disp_mode                = <0>;
//
//			screen0_output_type      = <1>;
//			screen0_output_mode      = <4>;
//
//			screen1_output_type      = <3>;
//			screen1_output_mode      = <10>;
//
//			screen1_output_format    = <0>;
//			screen1_output_bits      = <0>;
//			screen1_output_eotf      = <4>;
//			screen1_output_cs        = <257>;
//			screen1_output_dvi_hdmi  = <2>;
//			screen1_output_range     = <2>;
//			screen1_output_scan      = <0>;
//			screen1_output_aspect_ratio = <8>;
//
//			dev0_output_type         = <1>;
//			dev0_output_mode         = <4>;
//			dev0_screen_id           = <0>;
//			dev0_do_hpd              = <0>;
//
//			dev1_output_type         = <4>;
//			dev1_output_mode         = <10>;
//			dev1_screen_id           = <1>;
//			dev1_do_hpd              = <1>;
//
//			def_output_dev           = <0>;
//			hdmi_mode_check          = <1>;
//
//			fb0_format               = <0>;
//			fb0_width                = <1024>;
//			fb0_height               = <600>;
//
//			fb1_format               = <0>;
//			fb1_width                = <0>;
//			fb1_height               = <0>;
//			chn_cfg_mode             = <1>;
//
//			disp_para_zone           = <1>;
//			/* VCC-LCD */
//			dc1sw-supply = <&reg_sw>;
//			/* VCC-LVDS and VCC-HDMI */
//			bldo1-supply = <&reg_bldo1>;
//			/* VCC-TV */
//			cldo4-supply = <&reg_cldo4>;
//		};
//
//		hdmi: hdmi@06000000 {
//			hdmi_used = <1>;
//
//			bldo1-supply = <&reg_bldo1>;
//			hdmi_power_cnt = <1>;
//			hdmi_power0 = "bldo1";
//
//			hdmi_hdcp_enable = <1>;
//			hdmi_hdcp22_enable = <1>;
//
//			hdmi_cec_support = <1>;
//			hdmi_cec_super_standby = <0>;
//
//			ddc_en_io_ctrl = <0>;
//			power_io_ctrl = <0>;
//		};
//
///*----------------------------------------------------------------------------------
//;lcd0 configuration
//
//;lcd_if:               0:hv(sync+de); 1:8080; 2:ttl; 3:lvds; 4:dsi; 5:edp; 6:extend dsi
//;lcd_hv_if             0:Parallel RGB; 8:Serial RGB; 10:Dummy RGB; 11: RGB Dummy;12:CCIR656
//;lcd_hv_clk_phase      0:0 degree;1:90 degree;2:180 degree;3:270 degree
//;lcd_hv_sync_polarity  0:vs low,hs low; 1:vs high,hslow; 2:vs low,hs high; 3:vs high,hs high
//;lcd_hv_syuv_seq       0:YUYV; 1:YVYU; 2:UYVY; 3:VYUY
//;lcd_cpu_if            0:18bit/1 cycle parallel(RGB666); 4:16bit/1cycle parallel (RGB565)
//;                      6:18bit/3 cycle parallel(RGB666); 7:16bit/2cycle parallel (RGB565)
//;lcd_cpu_te            0:frame auto trigger; 1:frame triggered by te rising edge; 2:frame triggered by te falling edge;
//;lcd_dsi_if            0:video mode; 1: Command mode; 2:video burst mode
//;lcd_dsi_te            0:frame auto trigger; 1:frame triggered by te rising edge; 2:frame triggered by te falling edge;
//;lcd_x:                lcd horizontal resolution
//;lcd_y:                lcd vertical resolution
//;lcd_width:            width of lcd in mm
//;lcd_height:           height of lcd in mm
//;lcd_dclk_freq:        in MHZ unit
//;lcd_pwm_freq:         in HZ unit
//;lcd_pwm_pol:          lcd backlight PWM polarity
//;lcd_pwm_max_limit     lcd backlight PWM max limit(<=255)
//;lcd_hbp:              hsync back porch(pixel) + hsync plus width(pixel);
//;lcd_ht:               hsync total cycle(pixel)
//;lcd_vbp:              vsync back porch(line) + vysnc plus width(line)
//;lcd_vt:               vysnc total cycle(line)
//;lcd_hspw:             hsync plus width(pixel)
//;lcd_vspw:             vysnc plus width(pixel)
//;lcd_lvds_if:          0:single link;  1:dual link
//;lcd_lvds_colordepth:  0:8bit; 1:6bit
//;lcd_lvds_mode:        0:NS mode; 1:JEIDA mode
//;lcd_frm:              0:disable; 1:enable rgb666 dither; 2:enable rgb656 dither
//;lcd_io_phase:         0:noraml; 1:intert phase(0~3bit: vsync phase; 4~7bit:hsync phase;
//;                      8~11bit:dclk phase; 12~15bit:de phase)
//;lcd_gamma_en          lcd gamma correction enable
//;lcd_bright_curve_en   lcd bright curve correction enable
//;lcd_cmap_en           lcd color map function enable
//;deu_mode              0:smoll lcd screen; 1:large lcd screen(larger than 10inch)
//;lcdgamma4iep:         Smart Backlight parameter, lcd gamma vale * 10;
//;                      decrease it while lcd is not bright enough; increase while lcd is too bright
//;smart_color           90:normal lcd screen 65:retina lcd screen(9.7inch)
//;Pin setting for special function ie.LVDS, RGB data or vsync
//;   name(donot care) = port:PD12<pin function><pull up or pull down><drive ability><output level>
//;Pin setting for gpio:
//;   lcd_gpio_X     = port:PD12<pin function><pull up or pull down><drive ability><output level>
//;Pin setting for backlight enable pin
//;   lcd_bl_en     = port:PD12<pin function><pull up or pull down><drive ability><output level>
//;fsync setting, pulse to csi
//;lcd_fsync_en          (0:disable fsync,1:enable)
//;lcd_fsync_act_time    (active time of fsync, unit:pixel)
//;lcd_fsync_dis_time    (disactive time of fsync, unit:pixel)
//;lcd_fsync_pol         (0:positive;1:negative)
//;gpio config: <&pio for cpu or &r_pio for cpus, port, port num, pio function,
//pull up or pull down(default 0), driver level(default 1), data>
//;For dual link lvds: use lvds2link_pins_a  and lvds2link_pins_b instead
//;For rgb24: use rgb24_pins_a  and rgb24_pins_b instead
//;For lvds1: use lvds1_pins_a  and lvds1_pins_b instead
//;For lvds0: use lvds0_pins_a  and lvds0_pins_b instead
//;----------------------------------------------------------------------------------*/
//		lcd0: lcd0@01c0c000 {
//			lcd_used            = <1>;
//
//			lcd_driver_name     = "bp101wx1";
//			lcd_backlight       = <100>;
//			lcd_if              = <3>;
//
//			lcd_x               = <1024>;
//			lcd_y               = <600>;
//			lcd_width           = <150>;
//			lcd_height          = <94>;
//			lcd_dclk_freq       = <70>;
//
//			lcd_pwm_used        = <1>;
//			lcd_pwm_ch          = <0>;
//			lcd_pwm_freq        = <50000>;
//			lcd_pwm_pol         = <1>;
//			lcd_pwm_max_limit   = <255>;
//
//
//			lcd_hbp             = <120>;
//			lcd_ht              = <1218>;
//			lcd_hspw            = <10>;
//			lcd_vbp             = <10>;
//			lcd_vt              = <636>;
//			lcd_vspw            = <5>;
//
//			lcd_lvds_if         = <0>;
//			lcd_lvds_colordepth = <0>;
//			lcd_lvds_mode       = <1>;
//			lcd_frm             = <0>;
//			lcd_hv_clk_phase    = <0>;
//			lcd_hv_sync_polarity= <0>;
//			lcd_gamma_en        = <0>;
//			lcd_bright_curve_en = <0>;
//			lcd_cmap_en         = <0>;
//			lcd_fsync_en        = <0>;
//			lcd_fsync_act_time  = <1000>;
//			lcd_fsync_dis_time  = <1000>;
//			lcd_fsync_pol       = <0>;
//
//			deu_mode            = <0>;
//			lcdgamma4iep        = <22>;
//			smart_color         = <90>;
//
//			lcd_pin_power = "bldo1";
//
//			lcd_power = "dc1sw";
//			lcd_bl_en        = <&pio PD 27 1 0 3 1>;
//
//			lcd_gpio_0       = <&pio PH 4 1 0 3 1>;
//
//			pinctrl-0 = <&lvds0_pins_a>;
//			pinctrl-1 = <&lvds0_pins_b>;
//
//
//		};

/*----------------------------------------------------------------------------------
;tv configuration
;dac_src            (dac no,support dac_src0~dac_src3,dac num max is 4)
;interface          (interface type,1<->cvbs,2<->YPBPR,4<->SVIDEO)
;dac_type           (0<->composite,1<->luma,2<->chroma,3<->reserved,4<->y/green,
;                    5<->u/pb/blue,6<->v/pr/red)
;NOTE:              tv0,tv1 can not use the same dac_src.
;---------------------------------------------------------------------------------*/

		tv0: tv0@01c94000 {
			status =  "okay";

			dac_src0        = <0>;
			dac_type0       = <0>;

			interface       = <1>;
			tv_power = "cldo4";
		};
/*
		ctp {
			device_type = "ctp";
			status = "okay";
			ctp_twi_id = <0x0>;
			ctp_twi_addr = <0x5d>;
			ctp_screen_max_x = <0x500>;
			ctp_screen_max_y = <0x320>;
			ctp_revert_x_flag = <0x0>;
			ctp_revert_y_flag = <0x0>;
			ctp_exchange_x_y_flag = <0x0>;
			ctp_int_port = <&pio PA 4 6 0xffffffff 0xffffffff 0>;
			ctp_wakeup = <&pio PA 5 1 0xffffffff 0xffffffff 1>;
			ctp-supply = <&reg_dcdc1>;
			ctp_power_ldo_vol = <3300>;
		};
*/
	};
	gpu: gpu@0x01800000 {
		gpu_idle = <0>;
		dvfs_status = <1>;
		independent_power = <1>;
		operating-points = <
                        /* KHz   uV */
			648000 960000
			600000 900000
			552000 880000
			504000 860000
			456000 840000
			420000 820000
			384000 820000
			360000 810000
			336000 810000
			306000 810000
		>;
		gpu-supply = <&reg_dcdc4>;
	};
};

&aliases {
	pmu0 = &pmu0;
	standby_param = &standby_param;
};

&cpu_trips{
	cpu_crit: cpu_crit@0 {
		temperature = <120000>;
		type = "critical";
		hysteresis = <0>;
	};
};

&twi5 {
	no_suspend = <1>;
	status = "okay";

	pmu0: pmu@36{
		compatible = "x-powers,axp858";
		reg = <0x36>;
		interrupt-parent = <&nmi_intc>;
		interrupts = <0 IRQ_TYPE_LEVEL_LOW>;
		interrupt-controller;
		#interrupt-cells = <1>;

		wakeup-source;

		powerkey0: powerkey@0{
			status = "okay";
			compatible = "x-powers,axp2101-pek";
			pmu_powkey_off_time = <6000>;
			pmu_powkey_off_func = <0>;
			pmu_powkey_off_en = <1>;
			pmu_powkey_long_time = <1500>;
			pmu_powkey_on_time = <1000>;
			wakeup_rising;
			wakeup_falling;
		};

		standby_param: standby_param {
			vcc-io = <0x1>;
			vdd-cpua = <0x2>;
			vdd-sys = <0x4>;
			vdd-res1 = <0x40>;
			vcc-pll = <0x80>;
		};

		regulator0: regulators{
			reg_dcdc1: dcdc1 {
				regulator-name = "axp858-dcdc1";
				regulator-min-microvolt = <1500000>;
				regulator-max-microvolt = <3400000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_dcdc2: dcdc2 {
				regulator-name = "axp858-dcdc2";
				regulator-min-microvolt = <500000>;
				regulator-max-microvolt = <1540000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-ramp-delay = <6001>; /* FIXME */
				regulator-always-on;
			};

			reg_dcdc3: dcdc3 {
				regulator-name = "axp858-dcdc3";
				regulator-min-microvolt = <500000>;
				regulator-max-microvolt = <1540000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_dcdc4: dcdc4 {
				regulator-name = "axp858-dcdc4";
				regulator-min-microvolt = <500000>;
				regulator-max-microvolt = <1540000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-enable-ramp-delay = <1000>;
			};

			reg_dcdc5: dcdc5 {
				regulator-name = "axp858-dcdc5";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1840000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_dcdc6: dcdc6 {
				regulator-name = "axp858-dcdc6";
				regulator-min-microvolt = <500000>;
				regulator-max-microvolt = <3400000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_aldo1: aldo1 {
				regulator-name = "axp858-aldo1";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_aldo2: aldo2 {
				regulator-name = "axp858-aldo2";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_aldo3: aldo3 {
				regulator-name = "axp858-aldo3";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_aldo4: aldo4 {
				regulator-name = "axp858-aldo4";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_aldo5: aldo5 {
				regulator-name = "axp858-aldo5";
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <1200000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_bldo1: bldo1 {
				regulator-name = "axp858-bldo1";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_bldo2: bldo2 {
				regulator-name = "axp858-bldo2";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_bldo3: bldo3 {
				regulator-name = "axp858-bldo3";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_bldo4: bldo4 {
				regulator-name = "axp858-bldo4";
				regulator-min-microvolt = <700000>;
//				regulator-max-microvolt = <3300000>;
				regulator-max-microvolt = <1800000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_bldo5: bldo5 {
				regulator-name = "axp858-bldo5";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_cldo1: cldo1 {
				regulator-name = "axp858-cldo1";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_cldo2: cldo2 {
				regulator-name = "axp858-cldo2";
				regulator-min-microvolt = <3300000>;
				regulator-max-microvolt = <3400000>;
//				regulator-max-microvolt = <1800000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
				regulator-always-on;
			};

			reg_cldo3: cldo3 {
				regulator-name = "axp858-cldo3";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <3300000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_cldo4: cldo4 {
				regulator-name = "axp858-cldo4";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <4200000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_cpusldo: cpusldo {
				regulator-name = "axp858-cpusldo";
				regulator-min-microvolt = <700000>;
				regulator-max-microvolt = <1400000>;
				regulator-step-delay-us = <25>;
				regulator-final-delay-us = <50>;
			};

			reg_sw: sw {
				regulator-name = "axp858-sw";
			};
		};

		virtual-dcdc1 {
			compatible = "xpower-vregulator,dcdc1";
			dcdc1-supply = <&reg_dcdc1>;
		};

		virtual-dcdc2 {
			compatible = "xpower-vregulator,dcdc2";
			dcdc2-supply = <&reg_dcdc2>;
		};

		virtual-dcdc3 {
			compatible = "xpower-vregulator,dcdc3";
			dcdc3-supply = <&reg_dcdc3>;
		};

		virtual-dcdc4 {
			compatible = "xpower-vregulator,dcdc4";
			dcdc4-supply = <&reg_dcdc4>;
		};

		virtual-dcdc5 {
			compatible = "xpower-vregulator,dcdc5";
			dcdc5-supply = <&reg_dcdc5>;
		};

		virtual-dcdc6 {
			compatible = "xpower-vregulator,dcdc6";
			dcdc6-supply = <&reg_dcdc6>;
		};

		virtual-aldo1 {
			compatible = "xpower-vregulator,aldo1";
			aldo1-supply = <&reg_aldo1>;
		};

		virtual-aldo2 {
			compatible = "xpower-vregulator,aldo2";
			aldo2-supply = <&reg_aldo2>;
		};

		virtual-aldo3 {
			compatible = "xpower-vregulator,aldo3";
			aldo3-supply = <&reg_aldo3>;
		};

		virtual-aldo4 {
			compatible = "xpower-vregulator,aldo4";
			aldo4-supply = <&reg_aldo4>;
		};

		virtual-aldo5 {
			compatible = "xpower-vregulator,aldo5";
			aldo5-supply = <&reg_aldo5>;
		};

		virtual-bldo1 {
			compatible = "xpower-vregulator,bldo1";
			bldo1-supply = <&reg_bldo1>;
		};

		virtual-bldo2 {
			compatible = "xpower-vregulator,bldo2";
			bldo2-supply = <&reg_bldo2>;
		};

		virtual-bldo3 {
			compatible = "xpower-vregulator,bldo3";
			bldo3-supply = <&reg_bldo3>;
		};

		virtual-bldo4 {
			compatible = "xpower-vregulator,bldo4";
			bldo4-supply = <&reg_bldo4>;
		};

		virtual-bldo5 {
			compatible = "xpower-vregulator,bldo5";
			bldo5-supply = <&reg_bldo5>;
		};

		virtual-cldo1 {
			compatible = "xpower-vregulator,cldo1";
			cldo1-supply = <&reg_cldo1>;
		};

		virtual-cldo2 {
			compatible = "xpower-vregulator,cldo2";
			cldo2-supply = <&reg_cldo2>;
		};

		virtual-cldo3 {
			compatible = "xpower-vregulator,cldo3";
			cldo3-supply = <&reg_cldo3>;
		};

		virtual-cldo4 {
			compatible = "xpower-vregulator,cldo4";
			cldo4-supply = <&reg_cldo4>;
		};

	};
};

&cpu0 {
	cpu-supply = <&reg_dcdc2>;
};


&csi1 {
	status = "disabled";
};
